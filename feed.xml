<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Xtt's Blog</title>
    <link href="" rel="self" />
    <link href="http://xuting.me/" />
    <updated>2016-01-12T14:00:00Z</updated>
    <id>http://xuting.me/</id>
    
    <entry>
        <title><![CDATA[常见正则表达式使用]]></title>
        <author><name>xtt</name><uri>http://xuting.me/</uri></author>
        <link href="http://xuting.me/RegularExpression/"/>
        <updated>2016-01-12T14:00:00Z</updated>
        <published>2016-01-12T14:00:00Z</published>
        <id>http://xuting.me/RegularExpression/</id>
        <content type="html">
            <![CDATA[
             <h2>正则表达式是什么？</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp;在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要。正则表达式就是用于描述这些规则的工具。</br><br/>
&nbsp;&nbsp;&nbsp;&nbsp;快速理解：为了提高工作效率，比如你想在几千万个姓名中寻找一个叫徐瘦婷的人，但是你把这个瘦字忘掉了，用正则表达式可以这样写  </p>

<pre><code>徐.*?婷</code></pre>

<p>这样就可以把所有第一个字为徐，最后一个字为婷的用户列出来，比如：  </p>

<pre><code>徐大婷  
徐小婷  
徐胖婷  
.......</code></pre>

<p>好了，下面整理的一些常用正则表达式的使用语法～  </p>

<h4>一.常用的元字符</h4>

<table>  
<tr>  
<td>代码</td>  
<td>&nbsp;&nbsp;&nbsp;&nbsp;说明</td>  
</tr>   
<tr>  
<td>.</td>  
<td>匹配除换行符以外的任意字符</td>  
</tr>   
<tr>  
<td>w</td>  
<td>匹配字母或数字或下划线或汉字</td>  
</tr>   
<tr>  
<td>s</td>  
<td>匹配任意的空白符</td>  
</tr>   
<tr>  
<td>d</td>  
<td>匹配数字</td>  
</tr>   
<tr>  
<td>b</td>  
<td>匹配单词的开始或结束（位置）</td>  
</tr>   
<tr>  
<td>^</td>  
<td>匹配字符串的开始（位置）</td>  
</tr>  
<tr>  
<td>$</td>  
<td>匹配字符串的结束（位置）</td>  
</tr>   
<tr>  
<td> ＊ </td>  
<td>指定*前边的内容可以连续重复使用任意次（次数）</td>  
</tr>    
</table>  
  

<p>举几个例子说明一下使用方法：  </p>

<ul>
<li>\b ：&nbsp;&nbsp;是正则表达式规定的一个特殊代码,代表着单词的开头或结尾，也就是单词的分界处。<br/></li>
<li>\d+ ：&nbsp;&nbsp;匹配1个或更多连续的数字。这里的+是和＊类似的元字符，不同的是＊匹配重复任意次(可能是0次)，而+则匹配重复1次或更多次。<br/>
-\b\w{5}\b ：&nbsp;&nbsp;匹配刚好 5 个字符的单词。<br/></li>
<li>ba\w * \b ：&nbsp;&nbsp;匹配以字母 a 开头的单词——先是某个单词开始处(\b)，然后是字母 a，然后是任意数量的字母或数字(\w*)，最后是单词结束处(\b)。<br/></li>
<li>0\d\d-\d\d\d\d\d\d\d\d ：&nbsp;&nbsp;匹配这样的字符串：以 0 开头，然后是两个数字，然后是一个连字号 “-”，最后是 8 个数字(也就是电话号码).简写为0\d{2}-\d{8} 。<br/></li>
<li>\bYou\b.*\bHappy\b ：&nbsp;&nbsp;先是匹配一个单词 You，然后是任意个任意字符(但不能是换行)，最后是 Happy 这个单词。<br/></li>
<li>^ \d{5,12}$：&nbsp;&nbsp;要求数字必须为5位到12位。<br/></li>
</ul>

<p><em>注意问题:字符转义</em>  </p>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 如果你想查找元字符本身的话，比如你查找 . 或者 *，就出现了问题：你没办法指定它们，因为它们会被解释成别的意思。这时你就得使用\ 来取消这些字符的特殊意义。因此，你应该使用 \ . 和 \ * 。当然，要查找 \ 本身，你也得用 \。</br>  </p>

<pre><code>例如：unibetter\.com 匹配unibetter.com，C:\\Windows 匹配 C:\Windows</code></pre>

<h4>二.反义字符</h4>

<p>&nbsp;&nbsp;&nbsp;&nbsp;有时需要查找不属于某个能简单定义的字符类的字符。比如想查找除了数字以外，其它任意字符都行的情况，这时需要用到反义：  </p>

<ul>
<li>常用的反义代码<br/></li>
</ul>

<table>  
<tr>  
<td>代码／语法</td>  
<td>&nbsp;&nbsp;&nbsp;&nbsp;说明</td>  
</tr>   
<tr>  
<td>\W</td>  
<td>匹配任意不是字母，数字，下划线，汉字的字符</td>  
</tr>   
<tr>  
<td>\S</td>  
<td>匹配任意不是空白符的字符</td>  
</tr>   
<tr>  
<td>\D</td>  
<td>匹配任意非数字的字符</td>  
</tr>   
<tr>  
<td>\B</td>  
<td>匹配不是单词开头或结束的位置</td>  
</tr>   
<tr>  
<td>[^x]</td>  
<td>匹配除了 x 以外的任意字符</td>  
</tr>   
<tr>  
<td>[^aeiou]</td>  
<td>匹配除了 aeiou 这几个字母以外的任意字符</td>  
</tr>  
</table>  
   

<pre><code>举例：\S+匹配不包含空白符的字符串   
 &lt;a[^&gt;]+&gt; 匹配用尖括号括起来的以 a 开头的字符串。</code></pre>

<h4>三.常用限定符</h4>

<p>1.<strong>重复</strong>  </p>

<table>  
<tr>  
<td>代码</td>  
<td>&nbsp;&nbsp;&nbsp;&nbsp;说明</td>  
</tr>   
<tr>  
<td>＊</td>  
<td>重复零次或多次</td>  
</tr>   
<tr>  
<td>＋</td>  
<td>重复一次或更多次</td>  
</tr>   
<tr>  
<td>s</td>  
<td>匹配任意的空白符</td>  
</tr>   
<tr>  
<td>？</td>  
<td>重复零次会一次</td>  
</tr>   
<tr>  
<td>{n}</td>  
<td>重复n次</td>  
</tr>   
<tr>  
<td>{n,}</td>  
<td> 重复n次或更多次</td>  
</tr>  
<tr>  
<td>$</td>  
<td>匹配字符串的结束（位置）</td>  
</tr>   
<tr>  
<td> {n,m}</td>  
<td>重复n到m次</td>  
</tr>    
</table>  
  

<pre><code>举例说明：load\d+ 匹配 load后面跟 1 个或更多数字  
    ^\w+ 匹配一行(或一个字符串)的第一个单词</code></pre>

<p>2.<strong>分组</strong>（重复多个字符）  </p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;举例：(\d{1,3}.){3}\d{1,3} 是一个简单的IP地址匹配表达式。要理解这个表达式，请按下列顺序分析它：  </p>

<pre><code>\d{1,3} 匹配 1 到 3 位的数字，(\d{1,3}\.){3} 匹配三位数字加上一个英文句号(这个整体也就是这个分组)重复 3 次，最后再加上一个一到三位的数字 (\d{1,3})。</code></pre>

<ul>
<li>常用分组语法<br/></li>
</ul>

<table>  
<tr>  
<td>分类 </td>  
<td>代码/语法</td>  
<td>&nbsp;&nbsp;&nbsp;&nbsp;说明</td>  
</tr>   
<tr>  
<td>捕获</td>  
<td>(exp)</td>  
<td>匹配exp,并捕获文本到自动命名的组里</td>  
</tr>   
<tr>  
<td>捕获</td>  
<td>(?< name >exp)</td>  
<td>匹配exp,并捕获文本到名称为name的组里，也可以写成(?’name’exp)  
</td>  
</tr>   
<tr>  
<td>捕获</td>  
<td>(?:exp) </td>  
<td>匹配exp,不捕获匹配的文本，也不给此分组分配组号</td>  
</tr>   
<tr>  
<td>零宽断言</td>  
<td>(?=exp)</td>  
<td>匹配exp前面的位置</td>  
</tr>   
<tr>  
<td>零宽断言</td>  
<td>(?<=exp)</td>  
<td>匹配exp后面的位置</td>  
</tr>   
<tr>  
<td>零宽断言</td>  
<td>(?!exp)</td>  
<td> 匹配后面跟的不是exp的位置</td>  
</tr>  
<tr>  
<td>零宽断言</td>  
<td>(?<=exp)</td>  
<td>匹配前面不是exp的位置</td>  
</tr>   
<tr>  
<td> 注释</td>  
<td>(?#comment)</td>  
<td>这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</td>  
</tr>    
</table>  
  

<p>(<em>注：零宽断言</em><br/>
&nbsp;&nbsp;&nbsp;&nbsp;像 \b , ^ , $ 那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言。)</br>  </p>

<p>3.<strong>后向引用</strong>  </p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。  </p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;后向引用用于重复搜索前面某个分组匹配的文本。例如，\b(\w+)\b\s+\1\b 可以用来匹配重复的单词，像 go go, 或者 kitty kitty。</br>  </p>

<pre><code>这个表达式首先是一个单词，也就是单词开始处和结束处之间的多于一个的字母或数字 (\b(\w+)\b)，这个单词会被捕获到编号为 1 的分组中，然后是 1 个或几个空白符 (\s+)，最后是分组1中捕获的内容（也就是前面匹配的那个单词）(\1)。&lt;/br&gt;</code></pre>

<p>4.<strong>贪婪与懒惰限定符</strong>  </p>

<ul>
<li><p>贪婪限定符：最长匹配（匹配尽可能多的字符）。  </p>

<pre><code>举例：a.*b，它将会匹配最长的以 a 开始，以 b 结束的字符串。如果用它来搜索 aabab 的话，它会匹配整个字符串 aabab。</code></pre></li>
<li><p>懒惰匹配：最短匹配（匹配尽可能少的字符）。  </p>

<pre><code>举例：a.*?b ，以 a 开始，以 b 结束的字符串。如果把它应用于 aabab的话，它会匹配 aab（第一到第三个字符）和 ab（第四到第五个字符）。</code></pre></li>
<li><p>常用懒惰限定符  </p></li>
</ul>

<table>  
<tr>  
<td>代码/语法</td>  
<td>&nbsp;&nbsp;&nbsp;&nbsp;说明</td>  
</tr>   
<tr>  
<td>*?</td>  
<td>重复1次或更多次，但尽可能少重复  
</td>  
</tr>   
<tr>  
<td>+?</td>  
<td>重复0次或1次，但尽可能少重复  
</td>  
</tr>   
<tr>  
<td>??</td>  
<td>重复n到m次，但尽可能少重复</td>  
</tr>   
<tr>  
<td>{n,m}?</td>  
<td>匹配不是单词开头或结束的位置</td>  
</tr>   
<tr>  
<td>{n,}?</td>  
<td>重复n次以上，但尽可能少重复  
</td>  
</tr>   
</table>  
  

<h4>四.其他常用语法</h4>

<table>  
<tr>  
<td>代码/语法</td>  
<td>&nbsp;&nbsp;&nbsp;&nbsp;说明</td>  
</tr>   
<tr>  
<td>\a</td>  
<td>报警字符(打印它的效果是电脑嘀一声)</td>  
</tr>   
<tr>  
<td>\t</td>  
<td>制表符，Tab</td>  
</tr>   
<tr>  
<td>\r</td>  
<td>回车/td>  
</tr>   
<tr>  
<td>\v</td>  
<td>竖向制表符</td>  
</tr>   
<tr>  
<td>\f</td>  
<td换页符</td>  
</tr>   
<tr>  
<td>\n</td>  
<td>换页符</td>  
</tr>   
<tr>  
<td>\e</td>  
<td>escape</td>  
</tr>   
<tr>  
<td>\0nn</td>  
<td>ASCII代码中八进制代码为nn的字符  
</td>  
</tr>   
<tr>  
<td>\xnn</td>  
<td>ASCII代码中十六进制代码为nn的字符</td>  
</tr>   
<tr>  
<td>\unnnnr</td>  
<td>Unicode代码中十六进制代码为nnnn的字符</td>  
</tr>   
<tr>  
<td>\G</td>  
<td>当前搜索的开头</td>  
</tr>   
</table>  
  

<p>&nbsp;&nbsp;&nbsp;&nbsp;介绍比较简单，详细用法可参考关于正则表达式语言元素的MSDN在线文档:<a href="https://msdn.microsoft.com/zh-cn/library/az24scfc.aspx">https://msdn.microsoft.com/zh-cn/library/az24scfc.aspx</a>  </p>

<h4>五.补充几个正则表达式编辑器(本小白也没用过，有待进一步探索)：</h4>

<p>Debuggex ：<a href="https://www.debuggex.com/">https://www.debuggex.com/</a></br><br/>
PyRegex：<a href="http://www.pyregex.com/">http://www.pyregex.com/</a></br><br/>
Regexper：<a href="http://www.regexper.com/">http://www.regexper.com/</a></br>  </p>

            ]]>
        </content>
    </entry>
    
    <entry>
        <title><![CDATA[dnspod域名解析设置]]></title>
        <author><name>xtt</name><uri>http://xuting.me/</uri></author>
        <link href="http://xuting.me/dnspod/"/>
        <updated>2016-01-08T10:30:00Z</updated>
        <published>2016-01-08T10:30:00Z</published>
        <id>http://xuting.me/dnspod/</id>
        <content type="html">
            <![CDATA[
             <p>&nbsp;&nbsp;&nbsp;&nbsp;因为我的博客是用Github page搭建的，所以要把域名和Github_name.github.io的URL联系起来。本人实在小白一个，就纪录一下设置过程留着以后可以回顾。  </p>

<h3>一.购买域名</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;购买域名的网站很多啦，百度一搜一大把，本人是在godaddy上买的，有时候会有打折。  </p>

<h3>二.将已经搭建好的网站和域名联系起来</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;我本来是用godaddy的dns服务器搭建的，但是服务器不太稳定，早上起来就发现得翻墙才能打开自己的博客，所以决定使用国内的dns服务器。  </p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;百度一下发现dnspod口碑不错，而且是免费的，所以决定使用dnspod的dns服务器。具体操作方法如下：  </p>

<ol>
<li><p>首先在本地博客网站所在目录deploy下新建一个CNAME文件，路径如下，在cname文件中写下你的域名，保存，上传到Github上。<br/>
<img src="http://7xpt78.com1.z0.glb.clouddn.com/%E6%B7%BB%E5%8A%A0CNAME.png" width = "400" height = "200" alt="dns1" align=center />  </p></li>
<li><p>在dnspod官网注册一个帐号，也可以使用qq帐号直接登录，然后  </p>

<p>点击绿色按钮添加域名<br/>
<img src="http://7xpt78.com1.z0.glb.clouddn.com/dns%201.png" width = "600" height = "150" alt="dns1" align=center />  </p>

<p>点击你刚添加的域名，会载入如下信息：（此时只会出现如图灰色方框的两条纪录）<br/>
<img src="http://7xpt78.com1.z0.glb.clouddn.com/dns%202.png" width = "700" height = "200" alt="dns2" align=center />  </p></li>
<li><p>登录godaddy网站，在用户名的下拉菜单中点击Manage my domain，会出现如下界面：<br/>
<img src="http://7xpt78.com1.z0.glb.clouddn.com/dns%203.png" width = "700" height = "150" alt="dns2" align=center />  </p></li>
<li><p>单击你要配置的域名会出现具体信息，然后找到Nameserver,单击manage:<br/>
<img src="http://7xpt78.com1.z0.glb.clouddn.com/dns%205.png" width = "600" height = "70" alt="dns2" align=center />  </p></li>
<li><p>然后选择customer模式，添加纪录（如下图显示的两条纪录nameserver）,然后保存：<br/>
<img src="http://7xpt78.com1.z0.glb.clouddn.com/dns%206.png" width = "600" height = "400" alt="dns2" align=center />  </p></li>
<li><p>继续回到dnspod网站，如果你之前在godaddy的dns服务器已经配置过，单击你已经添加的域名会自动导入纪录，如果没有，就手动添加一个A纪录和一个CNAME纪录（如下图）：<br/>
<img src="http://7xpt78.com1.z0.glb.clouddn.com/dns%202.png" width = "700" height = "200" alt="dns2" align=center />  </p></li>
</ol>

<p>7.现在在去浏览器输入你的域名就可以直接跳转到你的博客界面啦～不会再显示your_github_name.github.io 这个URL了～  </p>

            ]]>
        </content>
    </entry>
    
    <entry>
        <title><![CDATA[考研二三事]]></title>
        <author><name>xtt</name><uri>http://xuting.me/</uri></author>
        <link href="http://xuting.me/kaoyan/"/>
        <updated>2016-01-06T15:30:00Z</updated>
        <published>2016-01-06T15:30:00Z</published>
        <id>http://xuting.me/kaoyan/</id>
        <content type="html">
            <![CDATA[
             <p>&nbsp; &nbsp; &nbsp; &nbsp; 距考研结束已经过去十天了，考试之前像高考之前一下 各种幻想考完研要怎么样怎么样，真正考完了却什么都不想做。最后几天脑细胞死的太多，考完后不想吃不想玩，只想睡几个懒觉后回到正常的作息。</br>  </p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 大概大三上学期结束就做了要考研的打算，但是下学期的课还是很多，真正开始准备考研应该是7月下旬。因为同学考研的不多而且大部分已经找到研友所以刚开始没有找到研友也没觉得什么就是自己复习。总结10月份之前的复习就是一句话，三天打鱼两天晒网。9月底因为一些私人事情实在无心学习回家待了10天左右，回来之后已经开始倒计时100天了。</br>  </p>

<p>&nbsp; &nbsp;&nbsp; &nbsp;  因为报考的学校专业课是408统考内容比较多，所以回来之后就开始认真进入专业课的复习，四门课搭配王道单科资料，基本上时15天看完一科加做完一本资料，大概到了50天的时候才把专业课一轮过了一遍。当时的感觉就是时间太紧张，什么都没复习完肯定考不上了，然后蠢到去找了实习，从投完简历到面试结束大概浪费了三四天的时间，两个面试我的人也是经历过考研的人，劝我不要在最关键的时候放弃，回来好好考研。那个时候只知道压力很大，当局者迷，只想着摆脱当前的处境，现在回过头来看看这一路，最庆幸的就是当时在分叉路口的时候继续坚持了下来。</br>  </p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 考研的最后40天，最辛苦最难熬也是最开心的40天。遇到了几个志同道合的小伙伴，每天互相督促鼓励，起早贪黑最然辛苦却也心安。真的很庆幸遇到这群小伙伴也很感激这群小伙伴，不然最后的两个星期我真的会精神紊乱的＝＝每12点以后睡，6点半起，图书馆一坐就是一整天，眼圈一天比一天黑，头发也掉的厉害，幸好没时间照镜子不然每天都要被自己丑哭＝＝</br>  </p>

<p>&nbsp; &nbsp;&nbsp; &nbsp;  流水账一样的记了很多，可以开始鸡汤了。</br>  </p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 现在成绩还没出来，也许我考不上，但我并不后悔这几个月的时间。人生有很多时间在长大，但是真正成长的时间寥寥无几。考研带给我最大的改变就是不像以前那么浮躁了，可以一个人待在图书馆安静看一天书，可以出门不带手机，可以轻松的远离社交平台，虽然害怕孤单但可以忍受孤单。还有就是这几个月改正了我大学前三年惨不忍睹的学习习惯，实在太贪玩，浪费了太多的时间。希望从现在开始好好努力还不算太晚。</br>  </p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; 现在是2016年的开头，希望这一年结束的时候我还能保持这种积极向上的心态。再回过头来看这篇博客还能够回想起这时候的心情。加油吧徐小婷同学。  </p>

            ]]>
        </content>
    </entry>
    
    <entry>
        <title><![CDATA[使用catsup快速建立个人博客]]></title>
        <author><name>xtt</name><uri>http://xuting.me/</uri></author>
        <link href="http://xuting.me/catsup_for_blog/"/>
        <updated>2016-01-02T20:30:00Z</updated>
        <published>2016-01-02T20:30:00Z</published>
        <id>http://xuting.me/catsup_for_blog/</id>
        <content type="html">
            <![CDATA[
             <h3>一.安装</h3>

<p>1.使用pip安装catsup：(sudo) pip install catsup<br/>
  从旧版本升级到新版本：(sudo) pip install catsup —upgrade  </p>

<p>2.用git安装catsup：  </p>

<pre><code>$git clone git://github.com/whtsky/catsup.git  
$cd catsup  
# 当前使用git submodule 来管理主题（当前版本是 sealscript,主题可以自由更换 ）  
$git submodule init  
$git submodule update  
$python setup.py install</code></pre>

<h3>二.快速建站</h3>

<p>1.建立新站点</br>  </p>

<p>安装完catsup之后根目录下会出现一个目录 catsup，进入catsup目录  </p>

<pre><code>$cd catsup  
$mkdir site  
$cd site  
$catsup init</code></pre>

<p>接着site目录下会自动穿件配置文件 config.json 和一个空白的文章目录posts  </p>

<p>2.配置新站点  </p>

<pre><code>$ vim config.json</code></pre>

<ul>
<li>insert键进入编辑模式，Mac电脑 i 键进入编辑模式；<br/></li>
<li>修改完成esc退出编辑模式，:q! 直接退出 |  :wq 保存后退出（具体vim的使用方法可百度）<br/></li>
<li>site.name : 站点的名字<br/></li>
<li>site.description : 站点的描述<br/></li>
<li>site.url : 站点的 URL 。比如 <a href="http://example.com">http://example.com</a><br/></li>
<li>author.name : 你的名字<br/></li>
</ul>

<p>3.创建文章  </p>

<pre><code>$cd posts  
$vim helloworld.md</code></pre>

<p><strong>一个名为 Hello World 文章应该是这样的(格式要严格遵守)</strong>  </p>

<pre><code># Hello world(文章标题)  
－ time：2016-01-02 20:30  
－ tags：hello world  

---  

文章内容（具体markdown的书写语法参照：http://www.appinn.com/markdown/index.html）</code></pre>

<p>然后，写一个独立页面来介绍你的站点  </p>

<pre><code>$vim posts/about.md</code></pre>

<p><strong>一个「关于」页面应该是这样的（严格遵守格式）</strong>  </p>

<pre><code># 名字  

－ time：2016-01-02 21:00  
－type：page  

---  
具体介绍内容</code></pre>

<p>4.生成站点  </p>

<pre><code>$catsup server（预览，打开浏览器http://127.0.0.1:8888 .）  
$catsup build（生成站点）</code></pre>

<p>站点生成成功后，site的文件里会多一个 deploy文件  </p>

<pre><code>$ls  
config.json deploy posts</code></pre>

<h3>三.部署站点</h3>

<p>1.首先你要有一个Github账号，如果没有请去创建一个（<a href="https://github.com），">https://github.com），</a><br/>
然后配置ssh,详情参看教程：<a href="http://blog.csdn.net/keyboardota/article/details/7603630,（已经有Github并且配置过ssh可忽略这两步）">http://blog.csdn.net/keyboardota/article/details/7603630,（已经有Github并且配置过ssh可忽略这两步）</a><br/>
 最后要在Github里面新建一个repository,如下：<br/>
 <img src="http://7xpt78.com1.z0.glb.clouddn.com/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="创建仓库"/>  </p>

<p>2.然后修改本机site目录下的配置文件deploy  </p>

<pre><code>$vim config.json</code></pre>

<p><img src="http://7xpt78.com1.z0.glb.clouddn.com/%E9%85%8D%E7%BD%AE.png" alt="修改配置"/>  </p>

<p>在这之后可以预览站点  </p>

<pre><code>$catsup server  
然后在浏览器输入 http://127.0.0.1:8888即可预览新站点</code></pre>

<p>最后把站点部署到 GitHub Pages 上  </p>

<pre><code>$catsup build &amp;&amp; catsup deploy(以后每一次修改配置提交到要执行这步)</code></pre>

<p>3.在浏览器上打开http://your_github_name.github.io 可以看到你的新站点  </p>

<hr/>

<h3>后记</h3>

<p>1.修改主题：</br>  </p>

<ul>
<li>第一步：可以自己写一个主题或者Github上克隆大神们已经写好的主题；<br/></li>
<li><p>第二步：修改配置文件  </p>

<pre><code>$cd site  
$vim config.json  
然后将theme下的&quot;name&quot;修改为你的主题名称，然后重新提交部署站点  
$catsup build &amp;&amp; catsup deploy</code></pre></li>
</ul>

<p>2.设置评论平台： (多说或者dispus等等)</br><br/>
以dispus为例（大多数情况下需要翻墙）：</br>  </p>

<ul>
<li>第一步：dispus官网注册一个账号（<a href="https://disqus.com/）">https://disqus.com/）</a><br/></li>
<li>第二步：点击settings下的Add dispus to site，<br/></li>
</ul>

<p><img src="http://7xpt78.com1.z0.glb.clouddn.com/dispus.png" alt="配置dispus"/>  </p>

<ul>
<li><p>第三步，回到本地site目录修改配置文件，  </p>

<pre><code>$vim config.json  
修改comment部分如下：</code></pre>

<p><img src="http://7xpt78.com1.z0.glb.clouddn.com/comment.png" alt="修改配置"/>  </p></li>
<li><p>第四步：重新提交部署站点：  </p>

<pre><code>$catsup build &amp;&amp; catsup deploy</code></pre>

<p>3.还有就是好好充实博客内容啦噜＋＋  </p></li>
</ul>

            ]]>
        </content>
    </entry>
    
</feed>